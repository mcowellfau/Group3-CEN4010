Ideas:
* Calorie Counter/Food Log
* Parts of Template:
   * Nutrition API - https://api-ninjas.com/api/nutrition
   * AI Image Generation - https://deepai.org/machine-learning-model/text2img 
   * Calories Burned API - https://api-ninjas.com/api/caloriesburned 
   * Nutrtionix - https://www.nutritionix.com/business/api 
   * Food Diary - Bootstrap Template?
      * Add a Meal
      * Add objects/food
      * Keep adding however many throughout the day
      * XP/Calorie Bar - fills as you add food
   * Login
      * Create an Acct
      * Non-user functionality
         * Get info about food, but login to track
      * Addt’l Resources - Dieticians/Celeb Chefs/Recipes
      * TDEE Generator - calculate expected calories based on activity level
         * Just enter calories burned today - many machines/apple watch track this


Priority List:


Top Priority
* Login and Information Storage - Database/Backend
* Develop fields for user input/info
   * how to enter info
* Nutrionix API incorporation


Medium Priority
* Food diary
* Nutrionix Calorie/Workout stuff
* Calorie/XP Bar thing


Low Priority
* Net calories burned
* Calorie differential
* Game-like aspects




SW Engineering Summer 2023
[FAU: CEN 4010]




Project Proposal: 
NutriPlay






Group: 3




Scrum Master, Frontend Developer: Danny Ruiz
Frontend Developer: Yolanda Vega
Backend and Frontend (Hybrid) Developers: Matthew Cowell, William Gardner
Product Owner, Backend Developer: Josh Young
















Milestone 1
Date: 20 June 2023
Revision History




TABLE OF CONTENTS
	

	

	Executive Summary………………………..
	3
	Use Cases …………………………………
	5
	Data definition …………………………………
	#
	Initial List of Functional Specifications …………………………………
	#
	List of Non-Functional Specifications …………………………………
	#
	High-Level System Architecture …………………………………
	#
	Competitive Analysis …………………………………
	#
	Team Roles …………………………………
	#
	

1. Executive Summary
        In the United States, and throughout much of the modern, developed world, obesity rates and overall levels of inactivity are striking. The World Health Organization notes the following striking facts: (i) “Worldwide obesity has nearly tripled since 1975”; (ii) “in 2016, more than 1.9 billion adults, 18 years and older, were overweight” and “over 650 million were obese”; (iii) “39% of adults aged 18 years and over were overweight in 2016, and 13% were obese”; and, (iv) strikingly and most disturbingly, “obesity is preventable.” [1]
        While this public health crisis certainly serves as a motivating tool for our development of NutriPlay, it is not our only endeavor. NutriPlay is envisioned as something of a game-like calorie counter; it fits perfectly in the space of both those who are striving to lose weight and maintain a healthier lifestyle, as well as with those trying to keep their healthy eating habits. We strive to develop a tool that is, unlike its peers, fun and usable; we believe in elegant simplicity, and envision a product where users of any technical level can interact efficiently and effectively with our software.
        This is where our key aims come in: NutriPlay utilizes Natural Language Processing (hereinafter “NLP”) models and API based on said models to take simple sentences and convert them into trackable foods. Instead of being bombarded with a plethora of images, or inefficient search features, Nutriplay takes any sentence, as simple as “I had three eggs for breakfast” and converts them into “trackable” foods, denoting and logging their calorie count, nutrition information, and the like. In a world where ChatGPT is becoming predominant in studies, law, medicine, and even software development, we strive to make something of a “FoodGPT.” [2]
        NutriPlay provides users with login capabilities, allowing them to form an account and track their daily activities and food intake. It also takes into account exercise and other caloric burning endeavors, allowing users to either search for-via a similar NLP-based API-or enter in raw data format from a FitBit or Apple Watch, or other such device, their calories burned, as a way to offset their overall caloric intake for the day. It also will provide friendly reminders, hopeful encouragement, and positive reinforcement upon login, and display simple rewards as part of the experience-bar like aspect.
        However, we also want to add a fun and interesting take to our tool. Rather than simply count the user’s calories, our tool actively encourages the user through psychological means, converting their calories and tracking them as a “score” and adding a game-like “experience-bar” to their profile to keep them interested. Retained interest in any application is difficult to garner, and since consistency is the key to weight loss, as referenced in a CNN study, it seems that our focus on consistency is the key to our end users’ successes. [3] 
        NutriPlay’s goals are evident in its name: We seek to provide our end users with a tool that both helps them meet their nutritional needs and goals, while capturing and capitalizing upon game-like interactivity to retain their interest and bolster their success stories. 
2. Use Cases
Use Case - Search
Upon visiting the page, User, regardless of whether they have an account or are instead a Visitor, seeks to search for caloric information regarding a certain food or a certain type of exercise. User or Visitor uses the search bar field to enter into the NLP model their food description or exercise description. The system references the API and returns nutrition facts, images, and general calorie information. 
1. Description: This use case describes the process of how User will utilize the search feature of the system.
2. Actors:
   1. User
   2. Visitor
   3. System
   4. Nutritionix API
3. Preconditions:
   1. User/Visitor has an active internet connection
   2. System is available
   3. User/Visitor has knowledge of their food consumption and recalls what they ate (quantity, type, etc.).
4. Primary Flow of Events:
   1. User/Visitor arrives at webpage.
   2. User may log in. Visitor can remain logged out, as they do not have an account. Should User log in, they are presented with their profile page.
   3. User/Visitor enters search criteria of food or caloric burning exercise/activity into the search bar.
   4. Web page displays relevant search results with images, nutrition information, and caloric counts.
   5. User, if logged in, may store this information in their log. Visitor may view information but not log such.
   6. Terminate Use Case: Search
5. Alternate Flows
   1. User Enters Prohibited Characters/Format into Search Bar.
      1. If, in step 4(c), User enters prohibited characters or a prohibited format in the search bar:
         1. Website notifies user that the characters they used are prohibited, and
         2. Return to step 4(a).
   2. User/Visitor Enters Unknown Food/Activity Not in API Database
      1. User/Visitor enters a location/activity that doesn’t exist in the API database.
      2. If, in step 4(c), User enters an unknown food or caloric-burning activity into the database and nothing is returned, the website shall:
         1. Provide alternative suggestions, and
         2. Terminate Use Case: Search
________________


Use Case - Add a Food/Caloric-Burning Activity to Log
User wants to add food or caloric-burning activity to their log in order to determine their current status. User logs in, conducts a search (See: Use Case - Search, above), and selects their consumed food or performed activity. User will press the “Add Food /Activity to Log” button, and System will check to ensure User is logged in. If not, User is asked to log in, or create an account if one does not exist. Once System confirms a successful login, User re-attempt to add the food or activity to their log. User will press Confirm, and the new Food/Activity is added to their calorie log and their experience bar progresses/moves.
1. Description: This use case describes the process of how User will add a Food/Activity to their calorie log and move their experience bar.
2. Actors:
   1. User
   2. System
   3. Nutritionix API
3. Preconditions:
   1. User/Visitor has an active Internet Connection
   2. System is available
   3. User has an active account
   4. User is logged into system
   5. User has conducted a search and selected the relevant food/activity
4. Primary Flow of Events:
   1. User has conducted a Search (See: Use Case - Search) for food/activity not yet logged.
   2. System checks if User is logged in.
   3. If User is not logged in, go to Alternative Flow 5(a).
   4. User fills out search bar (or form, if logging activity) provided by the system.
   5. User presses Confirm button to save added food/activity to their calorie log and move their experience bar.
   6. The system saves the selected food/activity to User’s calorie log and recalculates totals.
   7. Terminate Use Case - Add a Food/Caloric-Burning Activity to Log.
5. Alternative Flows:
   1. User is not logged in (from Primary Flow 4(c)).
      1. The system requests User enters their extant or new credentials.
         1. If User does not have an account, go to Alternative Flow 5(b)
      2. User enters credentials.
      3. System validates credentials
         1. if credentials are improperly entered, return to step 5(b) and re-confirm entry.
      4. End Alternative Flow 5(a) - Return to Primary Flow, step 5(d).
   2. User does not have an account (from Alternative Flow 5(a)(i)(1))
      1. The system requests User create an account
      2. If User does not want to create an account, End Alternate Flow 5(b). Terminate Use Case - Add a Food/Caloric-Burning Activity to Log.
      3. User clicks “Create a New Account” button.
      4. System displays Account Creation Form.
      5. User completes form, and presses Submit.
      6. The system creates new member account in the member database.
      7. End Alternative Flow - return to Primary Flow, step 4(d).User logs into their account.
________________


Use Case - Search for Additional Resources
User seeks additional resources, e.g., recipes, blogs, dieticians nearby, or how to start a weight loss journey, as well as ways on how to meet or exceed their fitness goals. User navigate to a new section of the website, entitled “Additional Resources.” Once the system redirects User to the new webpage, User is provided with Additional Resources and advice relevant to their interests.
1. Description: This use case describes the process of how User will find additional information relevant to their weight loss goals-or fitness goals-on the website.
2. Actors:
   1. User
   2. Visitor
   3. System
3. Preconditions:
   1. User has an active Internet Connection
   2. System is available
4. Primary Flow of Events:
   1. User arrives at webpage.
   2. User may log in. Should they log in, they are presented with their profile page.
   3. User selects the “Additional Resources” tab and navigates to that portion of the webpage.
   4. Additional resources are provided to User.
   5. Terminate Use Case - Search for Additional Resources.
5. Alternative Flows:
   1. User/Visitor does not find a resource as anticipated, but wants to suggest such a resource or idea be added.
      1. User/Visitor navigates to “Contact Us” section of the website and fills out provided form, providing recommendations.
      2. Terminate Use Case - Search for Additional Resources.


3. Data Definitions
+======================================+================================+====================+=======================================================================================================================================================================+
| Name                                 | Meaning                        | Usage              | Comment                                                                                                                                                               |
+======================================+================================+====================+=======================================================================================================================================================================+
| Visitor                              | actor                          | Use Case Scenarios | This person is new to NutriPlay and does not have an account created.                                                                                                 |
+--------------------------------------+--------------------------------+--------------------+-----------------------------------------------------------------------------------------------------------------------------------------------------------------------+
| User                                 | actor                          | Use Case Scenarios | This person has used NutriPlay before and possesses an existing account.                                                                                              |
+--------------------------------------+--------------------------------+--------------------+-----------------------------------------------------------------------------------------------------------------------------------------------------------------------+
| Member                               | actor                          | Use Case Scenarios | Shorthand or alternative term for a registered User possessing an account.                                                                                            |
+--------------------------------------+--------------------------------+--------------------+-----------------------------------------------------------------------------------------------------------------------------------------------------------------------+
| Non-Member                           | actor                          | Use Case Scenarios | Alternative term for Visitor.                                                                                                                                         |
+--------------------------------------+--------------------------------+--------------------+-----------------------------------------------------------------------------------------------------------------------------------------------------------------------+
| Nutrionix API                        | actor                          | Use Case Scenarios | Backend API providing NLP features and nutrition information to the Members or Non-Members.                                                                           |
+--------------------------------------+--------------------------------+--------------------+-----------------------------------------------------------------------------------------------------------------------------------------------------------------------+
| Nutrition Information                | data                           | Use Case Scenarios | Contains the number of Calories and micronutrients or minerals associated with the food consumed.                                                                     |
+--------------------------------------+--------------------------------+--------------------+-----------------------------------------------------------------------------------------------------------------------------------------------------------------------+
| System                               | platform hardware and services | Use Case Scenarios | All code, frontend design and backend supporting services.                                                                                                            |
+--------------------------------------+--------------------------------+--------------------+-----------------------------------------------------------------------------------------------------------------------------------------------------------------------+
| Exercise                             | data                           | Activity Type      | Represents calories burned from Nutrionix API as per conducting a certain exercise over a certain timeframe.                                                          |
+--------------------------------------+--------------------------------+--------------------+-----------------------------------------------------------------------------------------------------------------------------------------------------------------------+
| Food/Meals                           | data                           | Activity Type      | Simply represents food that may or may not have been consumed by the Member or Non-Member that otherwise wants to track their calories.                               |
+--------------------------------------+--------------------------------+--------------------+-----------------------------------------------------------------------------------------------------------------------------------------------------------------------+
| Calorie                              | data                           | Activity Type      | One kCal, used to represent the amount of energy consumed as part of a food or meal.                                                                                  |
+--------------------------------------+--------------------------------+--------------------+-----------------------------------------------------------------------------------------------------------------------------------------------------------------------+
| Calories Burned                      | data                           | Activity Type      | Represents the Calories burned by the Member that offset their Calorie Count.                                                                                         |
+--------------------------------------+--------------------------------+--------------------+-----------------------------------------------------------------------------------------------------------------------------------------------------------------------+
| Calorie Count                        | data                           | Activity Type      | The total logged Calories consumed and/or burned by the Member. Represented in the Experience Bar.                                                                    |
+--------------------------------------+--------------------------------+--------------------+-----------------------------------------------------------------------------------------------------------------------------------------------------------------------+
| Offset                               | data                           | Activity Type      | Any activity reducing calories in the Experience Bar, namely Exercises.                                                                                               |
+--------------------------------------+--------------------------------+--------------------+-----------------------------------------------------------------------------------------------------------------------------------------------------------------------+
| Experience Bar                       | data                           | Site User Service  | Displays the Member’s Calorie Count in an interactive, game-like way, allowing them to feel positive reinforcement as they progress throughout their fitness journey. |
+--------------------------------------+--------------------------------+--------------------+-----------------------------------------------------------------------------------------------------------------------------------------------------------------------+
| Natural Language Processing Features | service                        | Site User Service  | Enables Members and Non-Members alike to enter into a text box in a non-formalistic sense their foods/exercises.                                                      |
+--------------------------------------+--------------------------------+--------------------+-----------------------------------------------------------------------------------------------------------------------------------------------------------------------+
| Search Bar                           | service                        | Site User Service  | Enables Members and Non-Members to find various foods or exercises.                                                                                                   |
+--------------------------------------+--------------------------------+--------------------+-----------------------------------------------------------------------------------------------------------------------------------------------------------------------+
| Calorie Log                          | service                        | Site User Service  | Allows Members to track their Calories Burned and view them as part of their Calorie Count on the Experience Bar.                                                     |
+--------------------------------------+--------------------------------+--------------------+-----------------------------------------------------------------------------------------------------------------------------------------------------------------------+
| Photos                               | service                        | Site User Service  | Displays images of the food as retrieved from the Nutrionix API. Note that these images are mainly stock photos.                                                      |
+--------------------------------------+--------------------------------+--------------------+-----------------------------------------------------------------------------------------------------------------------------------------------------------------------+
| Search                               | service                        | Site User Service  | Allows Members and Non-Members to find various foods or activities.                                                                                                   |
+--------------------------------------+--------------------------------+--------------------+-----------------------------------------------------------------------------------------------------------------------------------------------------------------------+
| Login                                | service                        | Site User Service  | Allows Users to login and visit their Landing Page/Profile.                                                                                                           |
+--------------------------------------+--------------------------------+--------------------+-----------------------------------------------------------------------------------------------------------------------------------------------------------------------+
| NutriPlay                            | Domain Name                    | Site User Service  | A real usable name that represents all web pages and the web site.                                                                                                    |
+--------------------------------------+--------------------------------+--------------------+-----------------------------------------------------------------------------------------------------------------------------------------------------------------------+
| Web Site                             | User Interface                 | User Interface     | Frontend display for Member and Non-Member interactions.                                                                                                              |
+--------------------------------------+--------------------------------+--------------------+-----------------------------------------------------------------------------------------------------------------------------------------------------------------------+
| Homepage                             | User Interface                 | User Interface     | The first page that any Visitors or Users will arrive at.                                                                                                             |
+--------------------------------------+--------------------------------+--------------------+-----------------------------------------------------------------------------------------------------------------------------------------------------------------------+
| Additional Resources Page            | User Interface                 | User Interface     | Page that is displayed when User or Visitor seeks additional information relevant to their Calorie tracking needs.                                                    |
+--------------------------------------+--------------------------------+--------------------+-----------------------------------------------------------------------------------------------------------------------------------------------------------------------+
| Experience Bar                       | User Interface                 | User Interface     | The game-like aspect, referenced above as part of the Use Case Scenarios. This is our hallmark feature, differentiating us from the “boring” competition.             |
+======================================+================================+====================+=======================================================================================================================================================================+


4. 5. Initial list of functional specs
Non-Member expectations:
        Registering for an Account
1. The system shall allow the user to create an account by defining a custom User ID, password, while also requesting their first name, last name, date of birth, email address, and any/all answers to security and verification questions in the case that they forget their password.
2. The system shall not allow Visitor to create an account if their specified UserID has been chosen by another User and already exists in System’s database.
3. Also System shall prevent the user from creating an account if the User’s chosen password does not match the re-enter password field.
4. System shall require a certain degree of complexity in password entry, so as to ensure User credentials are secured and stored in a manner that is not accessible by malicious actors.
5. System shall prevent the creation of User’s account if any of the aforementioned fields are not properly filled with information.
1. Stimulus/Response Sequence
1. User enters a User ID
2. User enters a password
3. User re-enters password for confirmation
4. User shall enter their first and last name
5. User shall enter their date of birth
6. User shall enter their email address
7. User shall provide answers to security questions
8. System shall check if UserID is available
9. System shall validate password against requirements
10. System shall store User ID, first name, last name, date of birth, and email address, as well as security question responses
11. System shall confirm that the account was created by User and send an automated email confirmation
12. System will automatically redirect the user back to the home page at will
2. Function requirement label
   1. REQ 1.1 : Registering for an Account
________________


        Search Through the Food/Exercise Database
1. Visitor may browse by selecting entering into Search Bar any food or exercise of which they may wish to check the Calorie Count. System shall automatically parse, via the Nutritionix API, Visitor’s plain text entry, e.g., if Visitor enters, “for breakfast I had three eggs,” the Calorie Count and Nutrition Facts regarding three eggs shall be returned, as well as a small picture of an egg to confirm entry via visual cues. Visitor will not be able to log their results, as they are not a registered Member.
1. Stimulus/Response Sequence
   1. User sees the Search Bar on the main page of the Website
   2. User enters their desired query
   3. System shall parse, via NLP, their entry and attempt to pull up all relevant nutritional information
   4. Visitor will view said information
   5. System shall prevent the Visitor from logging any of such information, as they possess Non-Member status
2. Function requirement label
   1. REQ 2.1: Search Through the Food/Exercise Database
________________


View any Additional Resources or Suggest Foods/Exercises to Add
1. System will provide additional information and resources to Visitor, allowing them to view non-searchable information. Additionally, Visitor may provide suggestions regarding additional foods and exercises to incorporate into System.
1. Stimulus/Response Sequence - View Additional Resources
   1. Visitor clicks on “Additional Resources”
   2. System shall provide specific Additional Resources, based on Visitor’s location/IP data
   3. System shall also provide general links, and allow Visitor to submit suggestions for adding to the database
2. Stimulus/Response Sequence - Suggest New Foods/Exercises
1. Visitor shall click “suggest/add new information” under “Additional Resources”
2. Visitor will be prompted for information to add
3. System shall re-train NLP model and add information to database as necessary
3. Function requirement label
   1. REQ 3.1: View Additional Resources
   2. REQ 3.2: Suggest New Foods/Exercises
________________


About Us
1. System provides information to Visitor about the functionality that can benefit prospective User and reasons for registration to Member status. System also provides information about this project, the Nutritionix API, and how their information is processed/stored/used. 
1. Stimulus/Response Sequence
   1. Visitor uses the navigation bar and clicks “About us”
   2. Visitor is redirected to About us page
   3. Visitor sees links about relevant information at the top of the page
   4. Visitor sees our Mission Statement, privacy and security promises, and Nutrionix API information
   5. Visitor is provided with the opportunity to register for Member status
2. 4.3 Function requirement label
   1. REQ 4.1 About Us
________________


Member Expectations:
Edit Profile
1. User shall be able to edit their profile by changing their provided first and last name, date of birth, and email address. User may also add or modify their security questions. User further may view their Experience Bar, and receive messages of encouragement. System shall store all updated information upon pressing the “Save Changes” button. System shall prevent any changes to User’s profile if any fields are left blank. User must provide the information in a valid format meeting aforementioned requirements in order for the system to store the information.
1. Stimulus/Responsive Sequence
   * User will navigate to their Profile Page and a drop down menu will be activated
1. User will click on edit profile
2. User will input their name, date of birth, and write a summary about themselves
3. User shall click save
4. System shall store their name, date of birth, and summary
5. System shall refresh to user profile with updated information as a confirmation
6. System will have a button to redirect the user back to the home page at will
   * 5.3 Function requirement label
i.        REQ 5.1 Edit Profile store


________________




Add a Food/Caloric-Burning Activity to Log
1. User will navigate to specific Location/Activity through the browse functions and have the ability to rate certain Location/Activity. System shall provide a 5 star(or other thing) scale that User will use, 5 being the best. The system shall prevent the user from rating more than 5 or less than 0
   * 6.2 Stimulus/Responsive Sequence
1. User will use the browse function to navigate to specific Location/Activity
2. User will click on Location/Activity of choice
3. User will scroll to star rating feature and highlight the amount of stars the User wish to rate.
4. System shall store the user rating score
5. System will prevent user from rating again
6. System shall display a gratitude pop up stating that the rating has been stored
7. System will have a button to redirect the user back to the home page at will
   * 6.3 Function requirement label
i.        REQ 6.1 Rating Scale


Comment about Locations/Activities
   * 7.1 The system shall have a comment box where user will have the liberty to state their experience of the location/activity.The systems will prevent the user from commenting if the user have not created an account and have not given the Location/Activity a rate. Users are suppose to be members and have to rate the Location/Activity they wish to comment.
   * 7.2 Stimulus/Responsive Sequence
1. User shall use the browsing function
2. User will navigate to desired Location/Activity
3. User shall scroll to the comment box at the bottom of the page
4. User shall type their experience via keyboard
5. User shall click “Post Comment”
6. System shall store User’s comment
7. System shall display User’s Comment at bottom of the screen with a sorting of newest to oldest order as a confirmation
8. System will have a button to redirect the user back to the home page at will
   * 7.3 Function requirement label
i.        REQ 7.1 Post Comment


Rate comments posted by users
   * 8.1 User will navigate to a specific Location/Activity they will read the facts and read comments provided by users. Some the user will find useful and up-vote the comment others the users will find unuseful and down- vote the comment. System shall keep track of these upvotes and downvotes.
The system prevent the user from deleting upvotes or downvotes. Once an Upvote or Downvote has been past it stays. The system shall prevent the User from giving multiple Upvotes and Downvotes on a specific location.
   * 8.2 Stimulus/Responsive Sequence
1. User will use the browsing features to view list of Locations/Activities
2. User will click on desired Location/Activity among the list of suggestions
3. User will read facts and then scroll to Users comments
4. User will upvote comments that they find useful and downvote comments they find unuseful
5. System shall record upvote or downvote on specific comment
6. System shall prevent the user from upvoting and downvoting again on same comment
7. System shall show a comfirmation that the user have voted on the comment.
8. System will have a button to redirect the user back to the home page at will
   * 8.3 Function requirement label
i.        REQ 8.1 Upvote DownVote


User Add location/Activity
   * 9.1 User will be allowed to add Location/Activity to the database if, and only, if Location/Activity is not found in the database. The system shall store the given information at the moment the User clicks on “add” button. System shall prevent Users from Deleting Location/Activity from the Database.
   * 9.2 Stimulus/Responsive Sequence
   * User shall navigate the browse function
1. User shall navigate to desired location/Activity and realise such location/Activity is not found.
2. System shall prompt user,”Do you wish to add Location/Activity”
3. User shall hit yes
4. System shall redirect User to add Location/Activity
5. User shall enter required information and upload a picture
6. System shall store Location/Activity once user clicks Add viii.System shall thank the user and redirect User to home page
   * 9.3 Function requirement label
i.        REQ 9.1 User add


Contact Customer Service
   * 10.1 User will be allowed to contact the developers via email. user shall type in their name, email, and their query. System shall store these fields and submit it once the user click the send button. System shall prevent the User from contacting developers directly. User have to submit a ticket and the ticket shall be redirected to the correct personnel.
   * 10.2 Stimulus/Responsive Sequence
1. User shall navigate to Contact Us among the navigation bar
2. User shall fill in Name, Email, and type up their Query
3. User shall then click “Send” button underneither the Query box
4. System shall store the information and submit
5. System shall state that the information was sent and thank the user
6. System shall a button to redirect the user to Home page
   * 10.3 Function requirement label
i.        REQ 10.1 Contact Us
5. List of non-functional specs




Performance Requirements:
1. Responsiveness: The system will also be responsive, operating on various monitor sizes, ranging from 10” netbooks to 24” desktop monitors. It will also be responsive with a wide variety of resolutions, from 1024 x 600 through 1900 x 1200.
2. Cycle Time: The cycle time at expected performance will be 1.0. With this in mind, the system will operate between 1.0 - 1.2 with a load of 5-10 concurrent users or a slight lag. The system will operate with a 1.21 - 1.30 with a load of 11-25 concurrent users or a moderate lag. The system will operate with a 1.31-1.50 with a load of 26-45 concurrent users or a heavy lag. Finally the system will operate with a 1.51-1.70 with a load of 46-50 concurrent users or a very heavy lag. Any number of concurrent users over 50 will cause the systems performance to halt briefly until a user finishes.
3. Speed Per Transaction: The speed per transaction will be between 20-100 milliseconds, depending on the cycle time. The system will process 10-50 transactions per second.
4. Test Requirements: the test requirements for performance will include an expected load test as well as testing on all of the functional specs listed and their speed per transaction.
5. Reliability: The mean time between failures is that it must have 1 hour or less of downtime in a total of 3 months. This downtime can be used to perform maintenance and update information. The system should be operational 100% of the time for the first 99.8% of the calendar for the first year of its operation.
6. Minimum Bug Counts:
   * No more than 5 bugs in the system during integration and testing.
   * No more than 3 bugs can remain in the system after delivery.
7. Execution Speed: Execution speed of the initial home page on a high-speed internet connection should load within 100-200 milliseconds, depending on the current cycle time.
8. Storage Utilization: Storage utilization should be within 75 - 90% of the available storage provided at the time as to not get too close to using all storage and having a technical issue if more storage is needed for an emergency situation.
9. Robustness: The time needed to restart after a failure should be under an hour. The percentage of events that cause a failure will be under 0.1%. The probability of the data being corrupted on failure must be below 0.8%.


Ease of Use:
1. Training Time: Training time should be minimal if any at all as our site will be very user-friendly and should be able to be used by anyone who visits it.
Interoperability Requirements:
1. Browser Compatibility: The system will be a web-based web app that operates on at least two of the all of the major browsers, including Google Chrome, Mozilla Firefox, Safari, Opera, and Internet Explorer. It will have functionality in it that will provide alternatives if the browser does not have JavaScript installed on it.
3. Computer and OS Compatibility:The system will operate on various types of operating systems, including Windows, OS X and Linux. It will also operate on any type of computer which can run a browser which is supported.


Expected Load:
1. We will make allowances for up to 50 users at the same time. Load testing will be done to record performance times during periods of high traffic, both in a continuous and in a spiked pattern.


Security Requirements:
1. Login/Password System: Our system will have a login/password system to maintain the preferences, ratings and reviews of our sites visitors and locals. This implementation will also require a password confirmation upon creation. We will also ask the user for a security question that we will store along with the answer and if the user forgets their password, they will be able to retrieve it by providing the answer.
2. Encryption: The website will not be encrypted as no purchases or exchange of valuable information, such as credit card numbers, will occur.
3. Access Control: The ability to edit the front end code and back end code and databases will be provided to everyone on the development team. The users and visitors will have a limited access to using the system based on the user interface.
4. Spam Protection: The site will ask the user to enter a string of characters shown on a picture to create an account, thereby preventing bots from spamming the site and creating bogus accounts.
5. Resource Utilization: Resources such as the mySQL database on the sfsuswe.com server will be access through the PHP code using the usernames and passwords therein. All access to the sfsuswe.com servers and their resources will be obtained with the usernames and passwords given. The system will utilize bootstrap and jQuery as frameworks and will document proper licenses and/or qualifications of each.


Portability Requirements:
1. Platform Compatibility: The system has plans to be developed for mobile and tablet, but its based on whether it will be able to be developed in the given time frame. Its possible that in a further version, mobile and tablet compatibility will be implemented.
2. Percentage of Target-Dependent Statements: In this version of the system, 0% of statements will be target dependent. In a future version for use on mobile and tablet, 30% of statements will be target dependent.


Supportability Requirements:
1. Coding Standards: Our system will be coded in a range of 75-80% of coding standards for HTML 5 and CSS3. The code will be produced, reviewed, tested, reviewed again and finalized by yet another developer for efficiency.
2. Naming Conventions: HTML classes and id tags will be coded in lowercase except in the situation where there is more than one word in a name, and then it shall use camelcase convention. SQL tables and data names will be agreed on by the team and always use first letter capitalization and lowercase remaining letters.


Storage Requirements:
1. The storage for our system will consist of the sfsuswe.com server holding our mySQL databases within an unknown capacity as well holding our files for the actual site.


Survivability:
1. Our system will be stored on a sfsuswe.com servers and the major files and documentation will be backed up on Google Drive to prevent loss in case of a fire or other physical destruction of the servers.


Availability Requirements:
1. Accessible Times: Our system should be available for use 24 hours a day, 7 days a week. It will be up and running as long as the sfsuswe.com server is available.
2. Downtime Impact: The down time will be minimal but when it is necessary, a splash page will be used to identify that the system is in maintainence. Downtime impact is expected to be minimal and the scheduled downtime will be announced ahead of time.
3. Support: There will be support availability by email that will filter to several assigned developers. They will be responsive within 24 hours.


Fault Tolerance:
1. Exception Handling: There will be exception handling provided on all situations where an exception could occur. This will provide the user with an explanation as to why an exception occured and give them a chance to either input the correct answer or they will be taken back to the home page.
2. Self-checking software will not be implemented as this system isn’t critical enough to warrant it.
6. Competitive analysis


The analysis of competitors’ web sites will focus on six main features


(homepage, design, navigation, search, content, usability) and three additional features (ask a local, wish list, add item). The competitive analysis will utilize a numerical scale (1=bad, 2=poor, 3=fair, 4=good, 5=outstanding) and consists of five web sites chosen for their focus on travel, social networking, and use of rating/review systems.






	Voluntas Traveler
	Trip Advisor
	Virtual Tourist
	Zoover
	Not Seen World
	Tripbod
	Homepage:
	5
	4
	5
	2
	2
	3
	Design:
	5
	5
	4
	3
	3
	3
	Navigation:
	5
	5
	5
	4
	3
	3
	Search:
	4
	5
	4
	3
	3
	4
	Content:
	4
	5
	5
	3
	3
	3
	Usability:
	5
	5
	5
	3
	1
	3
	Ask a Local:
	5
	0
	0
	0
	0
	4
	Wish list:
	5
	4
	0
	0
	0
	0
	Add Item:
	5
	4
	3
	3
	0
	4
	Mean:
	4.70
	4.10
	3.54
	2.30
	1.89
	3.00
	

Voluntas Traveler (4.7) http://www.sfsuswe.com/~f13g31/P1/index.php
The Voluntas Traveler homepage is simple with eye catching photos and a prominent search bar. The navigation is consistent across the site and uses a breadcrumbs feature. The search is quick and utilizes autocomplete. The content is focused on travel ratings and reviews. The site is very user-friendly. All of the additional features are implemented on this site including ask a local, wishlist, and add item.


Trip Advisor (4.10) http://www.tripadvisor.com/
Trip Advisor has a very informative homepage that loaded quickly. The design of the page is clean, simple, and mostly text with limited photos/multimedia. The search is centered prominently on the homepage. The main navigation is consistent across the site and easy to use. The search responds quickly to queries and utilizes autocomplete. The site content is focuses on travel reviews and popular places. It is user friendly. It does not have an “ask a local” feature, but it does have a feature similar to a wish list and the ability to add a location.


Virtual Tourist (3.54) http://www.virtualtourist.com/
The virtual tourist homepage features large images and a large search bar. The navigation is consistent and easy to use. The search lags a little when entering queries and utilizes autocomplete. The content is focused on serving as a travel guide and offering travel reviews. The site is easy to use. It does not have an “ask a local” feature or wish list, but it does have the ability to add a new item for review.


Zoover (2.30) http://www.zoover.com/
The Zoover homepage is not eye-catching. The design of the results page is not impressive. The navigation is consistent. The search responds quickly but does not utilize autocomplete. The content is focused on providing vacation reviews. The usability is average based on the search and design. It does not have a “ask a local” feature or wish list feature, but it does have the ability to add an item for review.


Not Seen World (1.89) https://www.notseenworld.com/
The homepage for Not Seen World asks you to sign up or login before you can use their site. When trying to sign up for an account, I am unable to change my birth year from 2013. This causes an error message to be displayed that I am too young to register. The search bar is displayed on the registration page so I could access content anyway. The design and usability of the site are poor. It does not utilize any of the additional features.


Tripbod(3.00) http://www.tripbod.com/
The homepage for Tripbod is simple, but it is not clear where to go to sign up for an account. The site navigation is consistent. The search is quick and utilizes autocomplete. The content is focused on tourism and travel services. It has the “ask a local” feature and ability to add a new reviewable item. It does not have a wish list.


Planned advantages:
Voluntas Traveler is all about quality. Many travel sites overwhelm the user with a large amount of data, but Voluntas Traveler is focused on delivering quality over quantity. Unlike some travel sites, both registered and unregistered users can easily search the Voluntas site. Joining Voluntas Traveler is as simple as providing an email and password. Registered Voluntas users will receive the best and most relevant data based on their preferences. Registered users have the ability up or down vote other registered users. This serves as an excellent moderation tool that many other travel sites lack. Registered users will also enjoy planning future trips and activities utilizing our VoluntasList—Voluntas’ version of a travel wishlist. Very few travel sites offer this feature. Ask a local is another great feature that sets Voluntas Traveler apart from the competition. Our users will be privy to all of the hidden gems only locals would know about. For users seeking quality content, simple interface, and a place to share travel experiences Voluntas Traveler is the answer.




7. High-level system architecture


1. sfsuswe.com Lamp Server: sfsuswe Lamp Server with Amazon Web Services, shall be hosting our Fall 2013 web development project for a duration after the semester has been completed.


2. Squirrelmail Web Mail Application: Squrrel mail web mail application is the means that the group shall be communicating with each other for the development of the project during the semester. All communication has to be through squirrel mail


3. Bugzilla: Bugzilla is a bug tracking system used to track project features, issues and bugs, the group will use this tool during the semester to track the development process for the final project


4. sfsuswe Discussion Forums: sfsuswe discussion forums will be used to check if instructors have posted any information that was not sent through squirrel mail web application


5. mySQL Database: MySQL database is the database that is being used for the data that will be handled for the project. Users will be adding to the database via the website input function and developers will be managing the data (by either deleting) or adding items from and to the database.


6. Netbeans Integrated Development Environment (IDE): Netbeans is the IDE that the developers will be using to create the code for the website Languages to be used for the development of the website will be the following
   1. Hyper Text Mark-up Language(HTML) - will be the language that will allow the browser display the website
   2. Cascading Style Sheets(CSS) - will be the language used to decor the web pages
   3. Personal Home Page (PHP) - will be the language used for server side functionality for the database and real time edits in the tables
   4. Javascript - will be the language used for client side functionality that will be handled for User Interface(UI) needs to make the user experience enjoyable
   5. JQuery - will be the language used for client side functionality (Link to License: https://github.com/jquery/jquery/blob/master/MIT-LICENSE.txt) --- ( Jquery APIs)
   6. JQuery UI - will be the language used for client side functionality that will be handled for User Interface(UI) needs to make the user experience enjoyable (Link to Lisence: https://github.com/jquery/jquery/blob/master/MIT-LICENSE.txt) --- Note (Jquery APIs)
   7. Bootstrap - Bootstrap will be the framework that will be used for code construction for web pages within the groups project. (Link to License: https://github.com/twbs/bootstrap/blob/master/LICENSE)


7. Subversion: is a tool that the developers will be using to store, share, and allow access for team members to view source code that they have written. It allows for easier version control of the project.


8. Browser Compatibility: The system will be a web-based web app that operates on at least two of the all of the major browsers, including Google Chrome, Mozilla Firefox, Safari, Opera, and Internet Explorer. It will have functionality in it that will provide alternatives if the browser does not have JavaScript installed on it.
9. References


[1]        “Obesity and overweight.” https://www.who.int/news-room/fact-sheets/detail/obesity-and-overweight (accessed Jun. 15, 2023).
[2]        “ChatGPT is everywhere. Here’s where it came from,” MIT Technology Review. https://www.technologyreview.com/2023/02/08/1068068/chatgpt-is-everywhere-heres-where-it-came-from/ (accessed Jun. 15, 2023).
[3]        “Consistency is key for weight loss, study says | CNN.” https://www.cnn.com/2017/08/28/health/weight-loss-consistency-study/index.html (accessed Jun. 15, 2023).
10. Team Roles
Scrum Master, Frontend Developer: 
* Danny Ruiz
Frontend Developer: 
* Yolanda Vega
Backend and Frontend (Hybrid) Developers: 
* Matthew Cowell 
* William Gardner
Product Owner, Backend Developer: 
* Josh Young